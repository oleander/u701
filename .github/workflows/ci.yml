name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Cache Docker layers for faster builds
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-docker-${{ hashFiles('Dockerfile') }}
          restore-keys: |
            ${{ runner.os }}-docker-

      # Try to use pre-built image, fallback to building locally
      - name: Pull or build Docker image
        run: |
          # Try to pull the latest image from registry first
          if docker pull ghcr.io/${{ github.repository }}:latest 2>/dev/null; then
            echo "Using pre-built image from registry"
            docker tag ghcr.io/${{ github.repository }}:latest u701-builder
          else
            echo "Building Docker image locally"
            docker build \
              --cache-from=type=local,src=/tmp/.buildx-cache \
              --cache-to=type=local,dest=/tmp/.buildx-cache-new,mode=max \
              -t u701-builder .
            
            # Move cache to avoid growing cache
            if [ -d /tmp/.buildx-cache-new ]; then
              rm -rf /tmp/.buildx-cache
              mv /tmp/.buildx-cache-new /tmp/.buildx-cache
            fi
          fi

      # Run clippy in container
      - name: Clippy
        run: |
          docker run --rm -v ${{ github.workspace }}:/workspace u701-builder \
            /bin/bash -c "source \$ESPUP_PATH && cargo clippy --target xtensa-esp32-espidf -- -D warnings"

      # Build project in container  
      - name: Build
        run: |
          docker run --rm -v ${{ github.workspace }}:/workspace u701-builder \
            /bin/bash -c "source \$ESPUP_PATH && RUSTFLAGS='-C opt-level=0 -C debuginfo=0 -C codegen-units=16' CARGO_PROFILE_RELEASE_OPT_LEVEL=0 CARGO_BUILD_JOBS=\$(nproc) cargo pio build"

      # Test the project
      - name: Test
        run: |
          docker run --rm -v ${{ github.workspace }}:/workspace u701-builder \
            /bin/bash -c "source \$ESPUP_PATH && just test"
