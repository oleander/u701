name: Rust

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  CARGO_TERM_COLOR: always
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # Use CI-specific toolchain file
      - name: Setup CI toolchain file
        run: |
          cp rust-toolchain.ci.toml rust-toolchain.toml

      - name: Cache Cargo dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.platformio
            ~/.cargo
            target
            .pio
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock', '**/platformio.ini') }}-${{ hashFiles('**/Cargo.toml') }}
          restore-keys: |
            ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock', '**/platformio.ini') }}
            ${{ runner.os }}-cargo-

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@nightly
        with:
          components: rust-src, rustfmt, clippy

      - name: Install espup and ESP toolchain
        run: |
          # Install espup first without using custom toolchain
          RUSTUP_TOOLCHAIN=nightly cargo install espup --version 0.14.0 --locked
          # Install Xtensa toolchain for ESP32
          espup install -t esp32 -f .espup.sh
          # Source the ESP environment setup file
          source .espup.sh
          # Create a symbolic link for the 'esp' toolchain if needed
          if [ ! -d ~/.rustup/toolchains/esp ]; then
            rustup toolchain link esp ~/.rustup/toolchains/esp
          fi
          # Install cargo-pio and other required tools
          cargo install cargo-pio

      - name: Run tests (main)
        run: cargo test --verbose --target x86_64-unknown-linux-gnu

      - name: Build (main)
        run: |
          source .espup.sh
          RUSTUP_TOOLCHAIN=esp cargo build --target xtensa-esp32-espidf

      - name: Run tests (machine)
        run: cargo test --verbose --package machine --target x86_64-unknown-linux-gnu

      - name: Clippy (main)
        run: |
          source .espup.sh
          RUSTUP_TOOLCHAIN=esp cargo clippy --workspace --all-targets --all-features -- -D warnings

      # - name: Clippy (machine)
      #   uses: actions-rs/cargo@v1
      #   with:
      #     command: clippy
      #     args: --workspace --all-targets --all-features -- -D warnings --target x86_64-unknown-linux-gnu

      # - name: fmt (main)
      #   uses: actions-rs/cargo@v1
      #   with:
      #     command: fmt
      #     args: -- --check

      # - name: fmt (machine)
      #   uses: actions-rs/cargo@v1
      #   with:
      #     command: fmt
      #     args: -- --check --target x86_64-unknown-linux-gnu
